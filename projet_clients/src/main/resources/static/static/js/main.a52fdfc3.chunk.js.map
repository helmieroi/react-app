{"version":3,"sources":["component/navBar/SidebarData.js","component/navBar/Navbar.js","Home.js","component/ListClient.jsx","component/Messages_Alert/Success.js","component/ClientEdit.jsx","App.js","serviceWorker.js","index.js"],"names":["SidebarData","title","path","icon","cName","Navbar","useState","sidebar","setSidebar","showSidebar","Provider","value","color","className","to","onClick","map","item","index","id","Home","fluid","Component","ListClient","state","filter","clients","offset","perPage","currentPage","a","fetch","response","json","body","this","setState","e","target","Datasearch","Object","keys","some","key","toLowerCase","includes","length","class","type","onChange","searchTxt","bind","placeholder","width","client","nom","prenom","email","tag","Link","React","Success","role","ClientEdit","props","emptyItem","vButton","testnom","testpnom","testemail","alert_message","handleChange","handleSubmit","match","params","event","name","test","preventDefault","method","headers","JSON","stringify","onSubmit","autoComplete","required","for","vemail","disabled","withRouter","App","basename","process","REACT_APP_ROUTER_BASE","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a52fdfc3.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\n\r\n\r\nexport const SidebarData = [\r\n    {\r\n        title: 'Accueil',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome />,\r\n        cName: 'nav-text'\r\n      },\r\n       {\r\n    title: 'Liste des clients',\r\n    path: '/clients',\r\n    icon: <FaIcons.FaList />,\r\n    cName: 'nav-text'\r\n  }\r\n  \r\n];","import React, { useState } from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nimport { SidebarData } from './SidebarData';\r\nimport './Navbar.css';\r\nimport { IconContext } from 'react-icons';\r\n\r\nfunction Navbar() {\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: '#fff' }}>\r\n        <div className='navbar'>\r\n          <Link to='#' className='menu-bars'>\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </Link>\r\n        </div>\r\n        <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n          <ul className='nav-menu-items' onClick={showSidebar}>\r\n            <li className='navbar-toggle'>\r\n              <Link to='#' className='menu-bars'>\r\n                <AiIcons.AiOutlineClose />\r\n              </Link>\r\n            </li>\r\n            {SidebarData.map((item, index) => {\r\n              return (\r\n                <li key={index} className={item.cName}>\r\n                  <Link id=\"menuItem\" to={item.path}>\r\n                    {item.icon}\r\n                    <span>{item.title}</span>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Navbar from './component/navBar/Navbar';\r\n\r\nimport { Container } from 'reactstrap';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n              <Navbar/>\r\n            <Container fluid>\r\n                    <center><h1 >Bienvenue</h1></center>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React from \"react\";\r\nimport { Button, Container, Table  } from 'reactstrap';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./ListClient.css\";\r\nimport Navbar from './navBar/Navbar';\r\n\r\nclass ListClient extends React.Component {\r\n\r\n\r\n  \r\n  state = {\r\n        filter: \"\",\r\n        clients: [],\r\n        offset : 0,\r\n        perPage : 10,\r\n        currentPage : 0\r\n    };\r\n \r\n    \r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('/clients');\r\n        const body = await response.json();\r\n        this.setState({ clients: body });\r\n    }\r\n\r\n\r\n\r\n    searchTxt(e) {\r\n        this.setState({ filter: e.target.value });\r\n    }\r\n\r\n \r\n    render() {\r\n   \r\n        let { filter, clients } = this.state;\r\n        let Datasearch = clients.filter(item => {\r\n            return Object.keys(item).some(key =>\r\n                typeof item[key] === \"string\" && item[key].toLowerCase().includes(filter.toLowerCase()))\r\n\r\n        }\r\n\r\n        );\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n            \r\n                <Container fluid className=\"test\">\r\n                    <p className=\"headerlist\">\r\n                    <h4>Gestion des Clients</h4>\r\n\r\n                    <h6>{clients.length} élement affiche</h6></p>\r\n                    <div class=\"search__container\">\r\n\r\n                        <input class=\"search__input\" type=\"text\" onChange={this.searchTxt.bind(this)} placeholder=\"Search\" />\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <center>\r\n                    <div class=\"container-list\">\r\n                      <div class=\"wrap-list\">\r\n                    <Table id=\"table\">\r\n                        <thead>\r\n                            <tr id=\"en-tete\">\r\n                                <th width=\"10%\">Id</th>\r\n                                <th width=\"25%\">nom</th>\r\n                                <th width=\"25%\">Prénom</th>\r\n                                <th width=\"40%\">E-mail</th>\r\n\r\n\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            { \r\n                                Datasearch.map(client =>\r\n\r\n                                    <tr id=\"list-tr\" key={client.id} ><Link id=\"list-tr-a\"  to={\"/clients/\" + client.id}>\r\n\r\n                                        <td>{client.id}</td>\r\n                                        <td >{client.nom}</td>\r\n                                        <td>{client.prenom}</td>\r\n                                        <td>{client.email}</td>\r\n\r\n                                    </Link>\r\n                                    </tr>\r\n\r\n                                )\r\n\r\n                            }\r\n\r\n\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                    </div>\r\n                    </div></center>\r\n                    <br /><br />\r\n                    <div id=\"bgButton\" className=\"float-right\" >\r\n                        <Button id=\"returnButton\" tag={Link} to=\"/\"><IoIcons.IoMdReturnLeft id=\"my-icons\" /> <span>Retour</span></Button>\r\n                        <Button id=\"addButton\" tag={Link} to=\"/clients/new\"><AiIcons.AiOutlineUserAdd id=\"my-icons\" /> <span>Ajouter</span></Button>\r\n\r\n                    </div>\r\n                   \r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ListClient;","import React, { useState } from 'react';\r\nimport { Component } from 'react';\r\n\r\n\r\nexport default class Success extends Component {\r\n\r\nrender() {\r\n  return (\r\n    <div  id=\"alert_message\" class=\"alert alert-success\" role=\"alert\">\r\n                        success !\r\n                             </div>\r\n  );\r\n}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport Navbar from './navBar/Navbar';\r\nimport Success from './Messages_Alert/Success';\r\n\r\nimport * as IoIcons from 'react-icons/io';\r\nimport * as FiIcon from \"react-icons/fi\";\r\nimport \"./ClientEdit.css\";\r\nclass ClientEdit extends Component {\r\n\r\n    emptyItem = {\r\n        nom: '',\r\n        prenom: '',\r\n        email: '',\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.vButton = true;\r\n        this.testnom = false;\r\n        this.testpnom = false;\r\n        this.testemail = false;\r\n        this.state = {\r\n            item: this.emptyItem,\r\n            alert_message: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        if (this.props.match.params.id !== 'new') {\r\n            const client = await (await fetch(`/clients/${this.props.match.params.id}`)).json();\r\n             this.vButton = false;\r\n             this.testnom = true;\r\n             this.testpnom = true;\r\n             this.testemail = true;\r\n            this.setState({ item: client });\r\n          \r\n        }\r\n    }\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n\r\n        if (target.name === \"nom\") {\r\n\r\n            const reg = /^[a-zA-ZÀ-ú\\-\\s]*/;\r\n            if (target.value === \"\") {\r\n                this.testnom = false;\r\n                target.id = \"\"\r\n            }\r\n            else if ((!reg.test(target.value) === false) && (target.value.length > 2)) {\r\n\r\n                target.id = \"emailValid\"\r\n                this.testnom = true;\r\n            } else {\r\n                this.testnom = false;\r\n                target.id = \"emailINvalid\"\r\n\r\n            }\r\n        }\r\n        if (target.name === \"prenom\") {\r\n\r\n            const reg = /^[a-zA-ZÀ-ú\\-\\s]*/;\r\n            if (target.value === \"\") {\r\n                this.testpnom = false;\r\n                target.id = \"\"\r\n            }\r\n            else if ((!reg.test(target.value) === false) && (target.value.length > 2)) {\r\n                this.testpnom = true;\r\n                target.id = \"emailValid\"\r\n            } else {\r\n                this.testpnom = false;\r\n                target.id = \"emailINvalid\"\r\n\r\n            }\r\n        }\r\n        if (target.name === \"email\") {\r\n            const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n            if (target.value === \"\") {\r\n                this.testemail = false;\r\n                target.id = \"\"\r\n            }\r\n            else if (!reg.test(target.value) === false) {\r\n                this.testemail = true;\r\n                target.id = \"emailValid\"\r\n            } else {\r\n                this.testemail = false;\r\n                target.id = \"emailINvalid\"\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.testemail && this.testpnom && this.testnom) {\r\n\r\n            this.vButton = false;\r\n        } else\r\n            this.vButton = true;\r\n\r\n        const name = target.name;\r\n        let item = { ...this.state.item };\r\n        item[name] = value;\r\n        this.setState({ item });\r\n\r\n\r\n\r\n    }\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const { item } = this.state;\r\n\r\n        await fetch('/clients' + (item.id ? '/' + item.id : ''), {\r\n            method: (item.id) ? 'PUT' : 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item),\r\n        });\r\n        this.setState({alert_message:'Saccess !'})\r\n   //     this.props.history.push('/clients/new');\r\n    }\r\n    render() {\r\n        const { item } = this.state;\r\n        const title = <h2 id=\"title\">{item.id ? 'Modifier le client ' : 'Ajouter un client'}{item.id}</h2>;\r\n    \r\n         \r\n        return <div>\r\n           <Navbar />\r\n           <Container>\r\n                {title}<br></br>\r\n            {this.state.alert_message === 'Saccess !' ? <Success/>:null}\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup>\r\n                        <div className=\"question\">\r\n\r\n                            <Input type=\"text\" name=\"nom\" id=\"isValid\" value={item.nom || ''}\r\n                                onChange={this.handleChange} autoComplete=\"email\" required />\r\n                            <Label for=\"name\">Nom :</Label>\r\n                        </div>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <div className=\"question\">\r\n\r\n                            <Input type=\"text\" name=\"prenom\" id=\"prenom\" value={item.prenom || ''}\r\n                                onChange={this.handleChange} autoComplete=\"email\" required />\r\n                            <Label for=\"prenom\">Prénom :</Label>\r\n                        </div>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <div className=\"question\">\r\n\r\n                            <Input type=\"text\" name=\"email\" id={this.emptyItem.vemail} value={item.email || ''}\r\n                                onChange={this.handleChange} autoComplete=\"email\" required />\r\n                            <Label for=\"email\">Email :</Label>\r\n                        </div>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <div id=\"bgButton\" className=\"float-right\" >\r\n\r\n                            <Button id=\"returnButton\" tag={Link} to=\"/clients\"><IoIcons.IoMdReturnLeft id=\"my-icons\" /> <span>Retour</span></Button>\r\n\r\n\r\n                            <Button disabled={this.vButton} id=\"engButton\" type=\"submit\" ><FiIcon.FiSave id=\"my-icons\" /> <span>Enregistrer</span></Button>\r\n\r\n\r\n                        </div>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(ClientEdit);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport { HashRouter , Route, Switch } from 'react-router-dom';\r\nimport ListClient from './component/ListClient.jsx';\r\nimport ClientEdit from './component/ClientEdit.jsx';\r\nimport 'react-app-polyfill/stable'\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter basename={process.env.REACT_APP_ROUTER_BASE || ''}>\r\n          <Switch>\r\n          <Route  exact={true}  path='/clients' component={ListClient}/>\r\n          <Route path='/clients/:id' component={ClientEdit}/>\r\n          \r\n            <Route path='/' component={Home}/>\r\n           \r\n       \r\n         </Switch>\r\n        </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  )\r\n  \r\n  export default function register () {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n  \r\n        if (!isLocalhost) {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl)\r\n        } else {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl)\r\n        }\r\n      })\r\n    }\r\n  }\r\n  \r\n  function registerValidSW (swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log('New content is available; please refresh.')\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.')\r\n              }\r\n            }\r\n          }\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error)\r\n      })\r\n  }\r\n  \r\n  function checkValidServiceWorker (swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get('content-type').indexOf('javascript') === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload()\r\n            })\r\n          })\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl)\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        )\r\n      })\r\n  }\r\n  \r\n  export function unregister () {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister()\r\n      })\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as ServiceWorker from './serviceWorker.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);\n\nServiceWorker.unregister();\n"],"sourceRoot":""}